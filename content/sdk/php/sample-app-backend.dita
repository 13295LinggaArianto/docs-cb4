<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="php-sample-app-backend">
  
  <title>
    PHP Sample App Backend Tutorial
  </title>
  
  <titlealts>
    
    <navtitle>
      Sample App Backend
    </navtitle>
  
  </titlealts>
  
  <shortdesc>
    The PHP SDK tutorial bridges the gap between simple and advanced concepts, by 
    walking through a complete web application.
  </shortdesc>
  
  <body>
    
    <section>
      
      <p>
        The source code for the tutorial is available on GitHub, at
        <xref href="https://github.com/couchbaselabs/try-cb-php/" scope="external" format="html">couchbaselabs/try-cb-php</xref>.
        The primary focus of the tutorial is to explain the
        function and theory behind the Couchbase PHP client, and how it works together with 
        Couchbase Server; with special reference to features such as <codeph>N1QL</codeph>, 
        <codeph>FTS</codeph> and <codeph>sub-document</codeph>. 
        It makes use of the <codeph>travel-sample</codeph> data set. 
        The code that generates the web application is provided with the source code,
        but is not discussed in this tutorial.
      </p>
      
    </section>
    
    <section>
      
      <title>
        Specific PHP Prerequisites and Set-Up
      </title>
      

    
    <p>
      Before attempting to install the sample-app backend, install the Couchbase PHP SDK, as
      explained in
      <xref href="./start-using-sdk.dita" scope="local" format="dita">Start Using the SDK</xref>
    </p>
    
    <p>
      Then, proceed as follows:
    </p>
    
    <ul>
      
      <li>
        Make sure your system is running the 5.0 version of Couchbase Server. The server must have
        the <codeph>travel-sample</codeph> bucket installed, and an index named <codeph>hotel</codeph>
        defined on <codeph>travel-sample</codeph>. A user with username <codeph>travel-sample</codeph>
        and password <codeph>travel-sample</codeph> should also be defined, with the 
        <codeph>Bucket Full Access</codeph>
        and <codeph>Bucket Admin</codeph> roles assigned for the <codeph>travel-sample</codeph>
        bucket.
        
        <p>
        </p>
      </li>
      
      
      <li>
        
        Clone the source for the application, and checkout the 5.0 version:
        
        <p>
         
          <codeph>git clone https://github.com/couchbaselabs/try-cb-php.git</codeph>
          
        </p>
        
        
        <p>
          <codeph>cd try-cb-php/</codeph>
        </p>
      
        <p>
        <codeph>git checkout server-5.0</codeph>
        </p>
      </li>
      
      <li>
        Make sure <codeph>composer</codeph> is installed, then use it to install the application:
        
        <p>
          <codeph>curl -sS https://getcomposer.org/installer | sudo php -- --install-dir=/usr/local/bin --filename=composer</codeph>
        </p>
        
        <p>
          <codeph>composer install</codeph>
        </p>
      
      
      </li>
      
      <li>
        Create an <codeph>.env</codeph> file as follows:
        
        <p>
          <codeph>cp .env.example .env </codeph>
        </p>
        
        <p>
          Then, bring up <codeph>.env</codeph> in an editor, and establish username and
          password values as follows:
        </p>
        
        <p>
          <codeblock outputclass="bash">DB_USERNAME=travel-sample
DB_PASSWORD=travel-sample</codeblock>
        </p>
        
      </li>
      
      <li>
        Generate a key, for accessing the application:
        
        <p>
          <codeph>php artisan key:generate</codeph>
          
        </p>
      </li>
      
      <li>
        Run the application:
        
        <p>
          <codeph>php artisan serve --port 8080</codeph>
        </p>
        
      </li>
    </ul>
      
    </section>
    
    <section>
      
      <title>
        Walking Through the API
      </title>
      
      <p>
        The following sections lead you through the primary functions of the sample application.
        This shows you how to use the various features and services of Couchbase including:
        <b>connecting</b> to a cluster and bucket, <b>key/value</b> interactions,
        document <b>query through N1QL</b> and <b>full text searches</b>.
      </p>
      
    </section>
    
    
    <section>
      <title>
        Configure and Bootstrap the SDK
      </title>
      
      <p>
        <b>Where</b>: 
        <xref href="https://github.com/couchbaselabs/try-cb-php/blob/master/config/database.php"
        format="html" scope="external"><codeph>try-cb-php/config/database.php</codeph></xref>
      </p>
      
      <p>
          <b>Goals</b>:
          Connecting to a <codeph>Cluster</codeph>, getting a reference to a
          <codeph>Bucket</codeph> and learning to reuse it.
      </p>
      
      <p>
        <b>Relevant Documentation Topics</b>: 
        <xref href="managing-connections.dita"/>
      </p>
      
      
      <p>
        <b>Connecting to the Cluster</b>
        <xref href="https://github.com/couchbaselabs/try-cb-php/blob/master/config/database.php" format="html" scope="external" >try-cb-php/config/database.php</xref>.
      </p>
      
      <p>
        <b>Getting a Bucket</b>
        <xref href="https://github.com/couchbaselabs/try-cb-php/blob/95152187b98e97cc0f3f70885d41b8c6bc9f54a5/app/Http/Controllers/CouchbaseController.php" format="html" scope="external" >try-cb-php/app/Http/Controllers/CouchbaseController.php</xref>.
      </p>
    
    </section>
    
    <section>
      
      <title>
        Manage Users using Key/Value API
      </title>
      
      <p>
        <b>Manage a User</b>
        <xref href="https://github.com/couchbaselabs/try-cb-php/blob/3d9975861b417ce53e051d57fa10388963d47798/app/Http/Controllers/UserController.php" format="html" scope="external" >try-cb-php/app/Http/Controllers/UserController.php</xref>.
      </p>
      
    </section>
    
    
    <section>
      
      <title>
        A First N1QL Query: Finding Airports
      </title>
      
      <p>
        <b>N1QL Query 1</b>
        <xref href="https://github.com/couchbaselabs/try-cb-php/blob/3d9975861b417ce53e051d57fa10388963d47798/app/Http/Controllers/AirportController.php" format="html" scope="external" >try-cb-php/app/Http/Controllers/AirportController.php</xref>.
      </p>
      
      <p>
        <b>N1QL Query 2</b>
        <xref href="https://github.com/couchbaselabs/try-cb-php/blob/3d9975861b417ce53e051d57fa10388963d47798/app/Http/Controllers/FlightPathsController.php" format="html" scope="external" >try-cb-php/app/Http/Controllers/FlightPathsController.php</xref>.
      </p>
      
      
    </section>
    
    
    <section>
      
      <title>
        More Complex Queries: Finding Routes
      </title>
      
      <p>
        <b>Finding Routes</b>
        <xref href="https://github.com/couchbaselabs/try-cb-php/blob/3d9975861b417ce53e051d57fa10388963d47798/app/Http/Controllers/FlightPathsController.php" format="html" scope="external" >try-cb-php/app/Http/Controllers/FlightPathsController.php</xref>.
      </p>
      
      
      
    </section>
    
    <section>
      
      <title>
        Indexing the Data: N1QL and GSL
      </title>
      
    </section>
    
    <section>
      
      <title>
        Full Text Search: Finding Hotels
      </title>
      
      
      <p>
        <b>FTS: Hotel</b>
        <xref href="https://github.com/couchbaselabs/try-cb-php/blob/master/app/Http/Controllers/HotelController.php" format="html" scope="external" >try-cb-php/app/Http/Controllers/HotelController.php</xref>.
      </p>
      
    </section>
    
    
    
    </body>
  
</topic>

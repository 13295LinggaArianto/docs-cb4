<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_x1g_ggk_np">
 <title>ORDER BY clause</title>
  <shortdesc>In a <codeph>SELECT</codeph> statement, the <codeph>ORDER BY</codeph> clause sorts the
    result-set in ascending or descending order, based on one or more columns.</shortdesc>

 <body>
    <section id="section_Purpose">
      <title>Purpose</title>
      <p>In a <codeph>SELECT</codeph> statement, the <codeph>ORDER BY</codeph> clause sorts the
        result-set in ascending or descending order, based on one or more columns.</p>
    </section>
    <section id="section_Prerequisites">
      <title>Prerequisites</title>
      <p>For you to select data from a document or keyspace, you must have the
          <parmname>query_select</parmname> privilege on the document or keyspace. For more details
        about user roles, see <xref href="../../security/security-authorization.dita#authorization"
        />.</p>
    </section>
    <section id="section_Syntax"><title>Syntax</title>In the below <codeph>SELECT</codeph>
      statement, the <codeph>ORDER BY</codeph> clause is boldfaced:<p>
        <codeblock>SELECT <varname>select_clause</varname>
[FROM <varname>from_clause</varname>] [JOIN <varname>join_clause</varname>]
[USE INDEX <varname>useindex_clause</varname>]
[LET <varname>let_clause</varname>]
[WHERE <varname>where_clause</varname> ( [AND <varname>where_clause2</varname>] )* ]
[GROUP BY <varname>groupby_clause</varname>] [HAVING <varname>having_clause</varname>]
[UNION|INTERSECT|EXCEPT <varname>union_clause</varname>]
<b>[ORDER BY <varname>orderby_clause</varname> ]</b>
[LIMIT <varname>limit_int</varname>]
[OFFSET <varname>offset_clause</varname>]
;</codeblock>
      </p><b>Syntax of the
        <varname>orderby_clause</varname></b><codeblock><codeph>ORDER BY</codeph> <varname>expr</varname> [ASC|DESC] [, <varname>expr2</varname> [ASC|DESC] ]*</codeblock><image
        scale="50" href="images/order-by-clause.png" id="image_fxr_gr3_2cb"/></section>
    <section id="section_usf_fp3_2cb">
      <title>Arguments</title>
      <p>
        <dl>
          <dlentry>
            <dt>expr</dt>
            <dd>[Required] String or expression representing one or more fields in the
                <codeph>SELECT</codeph> clause.</dd>
          </dlentry>
        </dl>
        <dl>
          <dlentry>
            <dt><codeph>ASC</codeph> | <codeph>DESC</codeph></dt>
            <dd>[Optional; default is <codeph>ASC</codeph>] </dd>
            <dd><codeph>ASC</codeph> orders in ascending order.</dd>
            <dd><codeph>DESC</codeph> orders in descending order.</dd>
          </dlentry>
        </dl>
      </p>
    </section>
    <section id="section_sdj_qt3_2cb">
      <title>Return Values</title>
      <p>If no <codeph>ORDER BY</codeph> clause is specified, the order in which the result objects
        are returned is undefined.</p>
      <p>Objects are sorted first by the left-most expression in the list of expressions. Any items
        with the same sort value will be sorted with the next expression in the list. This process
        repeats until all items are sorted and all expressions in the list are evaluated.</p>
      <p>The order of different JSON types is as follows (from lowest to highest):<ul
          id="ul_lhp_h53_2cb">
          <li><codeph>MISSING</codeph></li>
          <li><codeph>NULL</codeph></li>
          <li><codeph>FALSE</codeph></li>
          <li><codeph>TRUE</codeph></li>
          <li>number</li>
          <li>string (string comparison is done using a raw byte collation of UTF8 encoded
            strings)</li>
          <li>array (element by element comparison is performed until the end of the shorter array;
            if all the elements so far are equal, then longer arrays sort after)</li>
          <li>object (larger objects sort after; for objects of equal length, key/value by key/value
            comparison is performed; keys are examined in sorted order using the normal ordering for
            strings)</li>
        </ul></p>
    </section>
    <section id="section_pyc_n53_2cb">
      <title>Examples</title>
      <p>Example 1: </p>
    </section>
  <p/>  
  
  <p> clause.</p>  
<codeblock>SELECT fname, age
      FROM tutorial
          ORDER BY age 
</codeblock>  

  <p>Returns:</p>  
  <codeblock>
 {
   "results": [
     {
       "age": 18,
       "fname": "Fred"
     },
     {
       "age": 20,
       "fname": "Harry"
     },
     {
       "age": 40,
       "fname": "Jane"
     },
     {
       "age": 46,
       "fname": "Dave"
     }
   ]
 }               

</codeblock>
 </body>
</topic>

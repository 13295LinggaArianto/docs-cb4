<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_qqp_xfk_np">
  <title>SELECT Clause</title>
  <body>
    <section id="section_q2x_wjg_lbb">
      <title>Purpose</title>
      <p>In a SELECT statement, the SELECT clause determines the projection of matching
        documents.</p>
    </section>
    <section id="section_u2h_zjg_lbb">
      <title>Prerequisites</title>
      <p>For you to select data from a document or keyspace, you must have the <i>Query Select</i>
        privilege on the document or keyspace. For more details about user roles, see <xref
          href="../../security/security-authorization.dita#authorization"/>.</p>
    </section>
    <section id="section_mxy_bkg_lbb"><title>Syntax</title>In the below SELECT statement, the SELECT
      clause is boldfaced:<p>
        <codeblock><b>SELECT [ALL|DISTINCT] [RAW|ELEMENT|VALUE] [<varname>keyspace_name</varname>.] <varname>field_expr</varname> [AS <varname>alias_name</varname>]</b>
[FROM <varname>keyspace_name</varname> [AS <varname>alias_name</varname>] ]
[WHERE <varname>where_clause</varname>] [AND <varname>where_clause2</varname>]
[GROUP BY <varname>group_clause</varname>]
[UNION|INTERSECT|EXCEPT <varname>union_clause</varname>]
[ORDER BY <varname>order_clause</varname>]
[LIMIT <varname>limit_int</varname>]
[OFFSET <varname>offset_clause</varname>]
;</codeblock>
      </p><p><codeph>select-clause::= SELECT [ ALL | DISTINCT ] ( result-expr [ , result-expr ]* | (
          RAW | ELEMENT | VALUE ) field_expr [ [AS] alias_name ] )</codeph></p><p><b>Railroad
          Diagram:</b></p><p><image href="images/select-clause.png" id="image_b51_kng_lbb"
      /></p></section>
    <section id="sec_Arguments">
      <title>Arguments</title>
      <p>
        <dl>
          <dlentry>
            <dt>ALL | DISTINCT</dt>
            <dd>[Optional; default is ALL]</dd>
            <dd>SELECT ALL retrieves all of the data specified and will display all of the specified
              columns, including all duplicates.</dd>
            <dd>SELECT DISTINCT removes duplicate result objects from the query's result set.</dd>
          </dlentry>
        </dl>
        <note>Since Couchbase Server 4.5.1, the DISTINCT clause is no longer blocking in nature
          since it streams the input and produces the output in-parallel, while consuming less
          memory.</note>
        <dl>
          <dlentry>
            <dt>RAW | ELEMENT | VALUE</dt>
            <dd>[Optional; RAW and ELEMENT and VALUE are synonyms]</dd>
            <dd>SELECT RAW specifies to make the resulting expression not be qualified; that is, the
              standard N1QL output (same as relational engines) returns tuples tagged with an alias,
              and the RAW qualifier removes this extra layer. </dd>
            <dd><b>Example 1</b>: Comparing SELECT and SELECT RAW on a basic query:<image
                href="images/select-clause_ex1.png" id="image_lzy_rmh_lbb"/></dd>
            <dd>There are times in which this extra layer might not be desirable since it requires
              extra output parsing. So the RAW qualifier specifies that the expression that follows
              not to be qualified, as shown in the next example.</dd>
            <dd><b>Example 2</b>: Comparing SELECT and SELECT RAW listing 5 airport cities
                alphabetically:<image href="images/select-clause_ex2.png" id="image_g5t_vmh_lbb"
              /></dd>
            <dd>SELECT VALUE allows only one value to be specified and does not add a row
              wrapper.</dd>
            <dd><b>Example 3</b>: SELECT VALUE<codeblock/></dd>
          </dlentry>
          <dlentry>
            <dt>keyspace_name</dt>
            <dd>[Optional; default is specified by the <xref href="from.dita#concept_rnt_zfk_np"
                >FROM clause</xref>] </dd>
            <dd>The name of the keyspace (equivalent to a relational database table).</dd>
            <dd>Multiple keyspaces are separated by a comma.<note>When specifying the keyspace name
                  in<codeph> SELECT keyspace_name.* </codeph>for all fields, the keyspace name will
                not appear in the result set; whereas not specifying the keyspace name in<codeph>
                  SELECT * FROM keyspace_name </codeph>adds the keyspace name to the result
                set.<codeblock><b>SELECT * FROM `travel-sample` WHERE type="hotel";</b>

[
  {
    "travel-sample": {                          / added line with keyspace
      "address": "Capstone Road, ME7 3JE",
      "alias": null,
      "checkin": null,
...</codeblock><codeblock><b>SELECT `travel-sample`.* FROM `travel-sample` WHERE type="hotel";</b>

[
  {                                             / no added line with keyspace
    "address": "Capstone Road, ME7 3JE",
    "alias": null,
    "checkin": null,
...</codeblock><codeblock><b>SELECT meta().id,email,city,phone,`travel-sample`.reviews[0].ratings
FROM `travel-sample` WHERE type="hotel" LIMIT 5;</b>

[
  {                                             / no added line with keyspace
    "city": "Medway",
    "email": null,
    "id": "hotel_10025",
    "phone": "+44 870 770 5964",
    "ratings": {
      "Cleanliness": 5,
      "Location": 4,
      "Overall": 4,
      "Rooms": 3,
      "Service": 5,
      "Value": 4
    }
  },</codeblock></note></dd>
          </dlentry>
        </dl>
        <dl>
          <dlentry>
            <dt>field_expr</dt>
            <dd>The name of the field or fields, separated by a comma, to be in the query's
              ResultSet, such
              as:<codeblock>SELECT <b>id, airline, stops</b> FROM `travel-sample` WHERE type="route";</codeblock></dd>
            <dd>To use a field within an array, use<codeph> [0] </codeph>after the array name,
              followed by a period and the field name, such
              as:<codeblock>SELECT <b>schedule[0].day</b> FROM `travel-sample` WHERE type="route";</codeblock></dd>
          </dlentry>
        </dl>
        <dl>
          <dlentry>
            <dt>AS alias_name</dt>
            <dd>A temporary name of a bucket name or field name to make names more readable or
              unique, such as:<codeblock>SELECT schedule[0].day <b>AS Weekday</b></codeblock></dd>
          </dlentry>
        </dl>
      </p>
    </section>
    <section id="sec_Limitations">
      <title>Limitations</title>
      <p>A SELECT statement containing a GROUP BY clause does not support the use of an asterisk (to
        select all columns) and requires the names of the desired columns to be specified. </p>
    </section>
    <section id="sec_BestPractices">
      <title>Best Practices</title>
      <p>When possible, explicitly list all fields you want in your ResultSet instead of the
        asterisk wildcard, since the wildcard requires an extra trip over your network (one to get
        the list of field names and one to select the field names).</p>
    </section>
    <section id="sec_Examples">
      <title>Examples</title>
      <p><b>Example 1</b>: Select all the fields of 1 document of type <codeph>airline</codeph> from
        the <codeph>travel-sample</codeph>
        keyspace.<codeblock>SELECT * FROM `travel-sample` WHERE type="airline" LIMIT 1;

Results:
[
  {
    "travel-sample": {
      "callsign": "MILE-AIR",
      "country": "United States",
      "iata": "Q5",
      "icao": "MLA",
      "id": 10,
      "name": "40-Mile Air",
      "type": "airline"
    }
  }
]</codeblock></p>
      <p><b>Example 2</b>: Select all the fields of 1 document of type <codeph>landmark</codeph>
        from the <codeph>travel-sample</codeph>
        keyspace.<codeblock>SELECT * FROM `travel-sample` WHERE type="landmark" LIMIT 1;

Results:
[
  {
    "travel-sample": {
      "activity": "see",
      "address": "Prince Arthur Road, ME4 4UG",
      "alt": null,
      "city": "Gillingham",
      "content": "Adult - Â£6.99 for an Adult ticket that allows you to come back for further visits within a year (children's and concessionary tickets also available). Museum on military engineering and the history of the British Empire. A quite extensive collection that takes about half a day to see. Of most interest to fans of British and military history or civil engineering. The outside collection of tank mounted bridges etc can be seen for free. There is also an extensive series of themed special event weekends, admission to which is included in the cost of the annual ticket.",
      "country": "United Kingdom",
      "directions": null,
      "email": null,
      "geo": {
        "accuracy": "RANGE_INTERPOLATED",
        "lat": 51.39184,
        "lon": 0.53616
      },
      "hours": "Tues - Fri 9.00am to 5.00pm, Sat - Sun 11.30am - 5.00pm",
      "id": 10019,
      "image": null,
      "name": "Royal Engineers Museum",
      "phone": "+44 1634 822839",
      "price": null,
      "state": null,
      "title": "Gillingham (Kent)",
      "tollfree": null,
      "type": "landmark",
      "url": "http://www.remuseum.org.uk"
    }
  }
]</codeblock></p>
    </section>
    <section id="sec_RelatedLinks">
      <title>Related Links</title>
      <p><xref href="from.dita#concept_rnt_zfk_np"/></p>
      <p><xref href="hints.dita#concept_npj_srf_2s">USE INDEX clause</xref></p>
      <p><xref href="let.dita#concept_qz5_bgk_np">LET Clause</xref></p>
      <p><xref href="where.dita#concept_zvb_dgk_np">WHERE Clause</xref></p>
      <p><xref href="groupby.dita#concept_uhg_2gk_np">GROUP BY Clause</xref></p>
      <p><xref href="union.dita#concept_iy2_fgk_np">UNION, INTERSECT, and EXCEPT Clause</xref></p>
    </section>

  </body>
</topic>
